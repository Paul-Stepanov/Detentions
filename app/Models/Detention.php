<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;


/**
 * @property mixed $user_update
 */
class Detention extends Model
{
   use HasFactory;

   /*-----------------------------------------------------------------------------
      Поля таблицы, которым разрешено массовое присвоение данных ↓
   -----------------------------------------------------------------------------*/
   protected
      $fillable = [
      'kusp',
      'date',
      'division_id',
      'type_id',
      'description',
      'note_id',
      'explanation',
      'editing',
      'user_update',
   ];

   /*-----------------------------------------------------------------------------
      Поле таблицы, которому присвоен формат: Дата ↓
   -----------------------------------------------------------------------------*/
   protected
      $dates = ['date'];

   /*-----------------------------------------------------------------------------
      Связь один ко многим с моделью Подразделений ↓
   -----------------------------------------------------------------------------*/

   public
   function division(): BelongsTo {
      return $this->belongsTo(Division::class);
   }

   /*-----------------------------------------------------------------------------
      Связь один ко многим с моделью Видов задержаний ↓
   -----------------------------------------------------------------------------*/
   public
   function type(): BelongsTo {
      return $this->belongsTo(Type::class);
   }

   /*-----------------------------------------------------------------------------
      Связь один ко многим с моделью Оснований прекращений регистрации ↓
   -----------------------------------------------------------------------------*/
   public
   function note(): BelongsTo {
      return $this->belongsTo(Note::class);
   }

   /*-----------------------------------------------------------------------------
      Связь один ко многим с моделью Отредактированных задержаний ↓
   -----------------------------------------------------------------------------*/
   public
   function edit_detentions(): HasMany {
      return $this->hasMany(EditDetention::class);
   }

   /*-----------------------------------------------------------------------------
      Связь один ко многим с моделью Пользователей ↓
   -----------------------------------------------------------------------------*/
   public
   function user(): BelongsTo {
      return $this->belongsTo(User::class);
   }
}
